name: Publish Loupe UX Server Linux
run-name: ${{ github.actor }} is publishing Loupe UX Server For Linux 🚀
on:
  push:
    tags: 
      - '*'
  workflow_dispatch:
jobs:
  Build-Loupe-UX-Server:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your Tag is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.27.1'
      - name: Use cmake
        run: cmake --version
      - name: Check out repository code
        uses: actions/checkout@v4
        with: 
          submodules: true
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: CMake Generators List
        run: cmake --help
      - name: Configure CMake
        run: cmake -S ${{github.workspace}}/src/LuxServer -B ${{github.workspace}}/src/LuxServer/cmakebuild -G "Unix Makefiles"
      - name: Build Executable
        run: cmake --build ${{github.workspace}}/src/LuxServer/cmakebuild --config Release --target luxserver
      - run: echo "🍏 The build's status is ${{ job.status }}."
      - name: Copy File
        run: cp ${{ github.workspace }}/src/LuxServer/configuration.json ${{ github.workspace }}/src/LuxServer/cmakebuild/src/server/Release/
      - name: Compress Folder
        run: zip -r ${{ github.workspace }}/src/LuxServer/cmakebuild/src/server/Release/luxserverlinux.zip ${{ github.workspace }}/src/LuxServer/cmakebuild/src/server/Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ github.workspace }}/src/LuxServer/cmakebuild/src/server/Release/luxserverlinux.zip
          asset_name: luxserverlinux.zip
          asset_content_type: application/zip
      - run: echo "🎉 The release's status is ${{ job.status }}."